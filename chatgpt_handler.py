import openai
import json
from faiss_db.search import search_problem  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –∏–∑ search.py
from config import OPENAI_API_KEY

# –£—Å—Ç–∞–Ω–æ–≤–∏–º –∫–ª—é—á API
openai.api_key = OPENAI_API_KEY


# def transform_query_with_gpt(user_query):
#     """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å —Å –ø–æ–º–æ—â—å—é ChatGPT –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞."""
#     print(f"üì• –ò—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_query}")
    
#     response = openai.ChatCompletion.create(
#         model="gpt-3.5-turbo",
#         messages=[
#             {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —É–ª—É—á—à–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞."},
#             {"role": "user", "content": f"–ü—Ä–µ–æ–±—Ä–∞–∑—É–π —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å: {user_query}. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π –≤ —Ç—Ä—ë—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö: (1. –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã) (2. –ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã) (3. –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã)."}
#         ],
#         temperature=0.7
#     )
    
#     # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
#     transformed_query = response['choices'][0]['message']['content']
#     token_count = response['usage']['total_tokens']
#     print(f"üìò –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {transformed_query.strip()}")
#     print(f"üî¢ –¢–æ–∫–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: {token_count}\n")
#     return transformed_query.strip(), token_count




def generate_final_response(search_result_json, user_query):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ JSON, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ—Ç search_problem."""
    print("üîç –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞...")

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º search_result_json –æ–±—Ä–∞—Ç–Ω–æ –≤ JSON-—Å—Ç—Ä–æ–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∑–∞–ø—Ä–æ—Å
    search_result_pretty = json.dumps({"–ø—Ä–æ–±–ª–µ–º—ã": search_result_json}, ensure_ascii=False, indent=4)
    print(f"üì¶ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã:\n{search_result_pretty}")
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –º–æ–¥–µ–ª–∏
    response = openai.ChatCompletion.create(
        model="gpt-4o-2024-08-06",
        messages=[
            {
                "role": "system",
                "content": (
                    "–¢—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–µ—Ç–∞–ª–ª—É—Ä–≥–∏—á–µ—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏. "
                    "–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –≤—ã–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, —Ç–æ—á–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º. "
                    "–ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –µ—Å—Ç—å –≤ –±–∞–∑–µ, –∏—Å–ø–æ–ª—å–∑—É–π –µ—ë. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç, –¥–∞–π –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–≤–µ–¥–æ–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
                )
            },
            {
                "role": "user",
                "content": (
                    f"–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_query}\n"
                    f"–î–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è):\n```json\n{search_result_pretty}\n```\n"
                    
                    "‚ö† **–í–ê–ñ–ù–û!** –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –æ—Ç–≤–µ—á–∞—Ç—å:\n"
                    "- –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª—É—á–∞–π–Ω—ã–π –Ω–∞–±–æ—Ä –±—É–∫–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–∞–±–æ–±–∞', '—ã–≤–∞–ø–∞–≤–ø'), —Å–æ–æ–±—â–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: "
                    "'–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –µ–≥–æ.'\n"
                    "- –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Å–≤—è–∑–∞–Ω —Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é, —Ç—ã –¥–æ–ª–∂–µ–Ω –¥–∞—Ç—å –æ—Ç–≤–µ—Ç.\n"
                    "- –ï—Å–ª–∏ –≤ –±–∞–∑–µ –µ—Å—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö –¥–ª—è –æ—Ç–≤–µ—Ç–∞.\n"
                    "- –ï—Å–ª–∏ –≤ –±–∞–∑–µ –µ—Å—Ç—å **–ø—Ä—è–º—ã–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ**, –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö –¥–ª—è –æ—Ç–≤–µ—Ç–∞.\n"
                    "- –ï—Å–ª–∏ —Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–π –∏–¥–µ–∏, –∫–æ—Ç–æ—Ä—ã–µ **–º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã –ø–æ —Å–º—ã—Å–ª—É**.\n"
                    "- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π, –µ—Å—Ç—å –ª–∏ —Å—Ä–µ–¥–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö **—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è**. –ï—Å–ª–∏ **–Ω–µ—Ç**, —Å–æ–æ–±—â–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: '–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.'\n"
                    

                    "üìå **–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:**\n"
                    "1Ô∏è‚É£ **–ï—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É?** (–û—Ç–≤–µ—Ç—å **–î–ê** –∏–ª–∏ **–ù–ï–¢**. –ï—Å–ª–∏ **–ù–ï–¢**, —Å—Ä–∞–∑—É —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –ø—Ä–µ–∫—Ä–∞—Ç–∏ –æ—Ç–≤–µ—Ç.) –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: **–î–ê** | **–ù–ï–¢**  \n\n"
                    "2Ô∏è‚É£ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–æ–ø—Ä–æ—Å—É:**\n"
                    "- –í—ã–≤–µ–¥–∏ —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, –¥–æ–±–∞–≤–ª—è—è –∫ –∫–∞–∂–¥–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä –∏–¥–µ–∏, –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∞ —Å–¥–µ–ª–∞–Ω–∞.\n"
                    "- –ï—Å–ª–∏ –≤ –±–∞–∑–µ –Ω–µ—Ç —Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º—ã –≤–æ–ø—Ä–æ—Å–∞.\n"
                    "- –û–±–æ—Å–Ω—É–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: **–ø–æ—á–µ–º—É –æ–Ω–∏ –ø–æ–¥—Ö–æ–¥—è—Ç?**\n"
                    "- –ü–∏—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ –¥–æ–±–∞–≤–ª—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç —Å–µ–±—è.\n"
                    "–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:\n"
                    "- —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –ø—Ä–æ–±–ª–µ–º–µ (–∏–¥–µ—è: '–Ω–æ–º–µ—Ä –∏–¥–µ–∏', '—Å—Ç–∞—Ç—É—Å')\n"
#                    "- —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –ø—Ä–æ–±–ª–µ–º–µ (–∏–¥–µ—è: '–Ω–æ–º–µ—Ä –∏–¥–µ–∏')\n"
#                   "- —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –ø—Ä–æ–±–ª–µ–º–µ (–∏–¥–µ—è: '–Ω–æ–º–µ—Ä –∏–¥–µ–∏')\n"
                    "- (–ø–æ–¥–æ–ª–∂–∞–π —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–∞–ª–µ–µ, –ø–æ–∫–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è —Ä–µ–ª–µ—Ñ–∞–Ω—Ç–Ω—ã–µ –∏–¥–µ–∏.......\n\n"
                    "3Ô∏è‚É£ **–û—Ç–≤–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞:**\n"
                    "- –í—ã–≤–µ–¥–∏ —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ –∏–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–∫–∞–∑–∞–ª–∏—Å—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –≤ –æ—Ç–≤–µ—Ç–µ.\n"
                    "–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:\n"
                    "(—Å–ø–∏—Å–æ–∫) - –Ω–æ–º–µ—Ä –∏–¥–µ–∏"
                )
            }
        ],
        temperature=0.5
    )

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç –∏–∑ –º–æ–¥–µ–ª–∏
    final_response = response['choices'][0]['message']['content']

    token_count = response['usage']['total_tokens']
    return final_response.replace("\n", "\n\n").strip(), token_count


def main(user_query):
    # """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∑–∞–ø—Ä–æ—Å, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç."""
    # # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ ChatGPT
    # print("üîç –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ ChatGPT...")
    # transformed_query, transform_tokens = transform_query_with_gpt(user_query)

    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    print("\nüîç –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ search_problem...")
    metadata_json = search_problem(user_query)
    metadata_list = json.loads(metadata_json).get("–ø—Ä–æ–±–ª–µ–º—ã", [])

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    final_response, response_tokens = generate_final_response(metadata_list, user_query)

    total_tokens =  response_tokens
    print(f"\nüìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤: {total_tokens}\n")

    return final_response


if __name__ == "__main__":
    user_input = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å: ")
    response = main(user_input)
    print("\nüì¢ –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:\n")
    print(response)
